#!/bin/bash
# muslx32toolkit - scripts to generate a stage3 and stage4 image for Gentoo Linux using crossdev for the muslx32 profile
# Copyright (C) 2017  Orson Teodoro <orsonteodoro@yahoo.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#note: this was used to fix problems in the middle of creating the stage4 image caused by the create-stage4 script.

pushd `dirname $0` > /dev/null
MUSLX32_TOOLKIT_FOLDER=`pwd -P`
popd > /dev/null

source ${MUSLX32_TOOLKIT_FOLDER}/config
echo "This script is currently going deprecation.  It will be eventually deleted. 20170507."
echo "This script should be ran outside the chroot of the crossdev-profile image in the muslx32toolkit.  if not, chroot out."
echo "if you ctrl+c at any time, which is discouraged, you need to run native-profile-switch script."
echo "This will fix the broken system toolchain.  You need to use it in the stage 3 image, an exit out chroot may be necessary."
echo "Visit all yes no checkpoints just in case emerge system/world is out of order."
CROSSDEV_TARGET="x86_64-pc-linux-muslx32"
cd "/usr/${CROSSDEV_TARGET}/etc/portage"
rm make.conf
echo "switching to cross make.conf"
ln -s make.conf.cross make.conf

echo "are programs failing like ls or nano?  (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 musl
fi

#Traceback (most recent call last):
#  File "/usr/lib/python-exec/python3.4/emerge", line 41, in <module>
#    import portage
#ImportError: No module named 'portage'
echo "did you emerge which or baselayout?  do you see: \"bash: /bin/ls: No such file or directory\" or \"ImportError: No module named 'portage'\"? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 which
	${CROSSDEV_TARGET}-emerge -1 baselayout

	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi #removable

echo "did you see readline spew (Error relocating /bin/bash: rl_newline for example or any rl_* spew)? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 readline
	echo "remember to --resume"
fi

echo "is portage working? (y/n)"
read X
if [[ "${X}" == "n" ]]; then
	${CROSSDEV_TARGET}-emerge -1 libffi
	${CROSSDEV_TARGET}-emerge -1 zlib
	${CROSSDEV_TARGET}-emerge -1 sys-apps/file
	${CROSSDEV_TARGET}-emerge -1 expat
	${CROSSDEV_TARGET}-emerge -1 python:${PYTHON_2_VERSION} python:${PYTHON_3_VERSION}
	${CROSSDEV_TARGET}-emerge -1 portage
fi

#echo "did readline debug spew? (y/n)"
#read X
#if [[ "${X}" == "y" ]]; then
#	${CROSSDEV_TARGET}-emerge -1 readline
#fi

echo "did emerging procps fail? (y/n)" #section could possibly be removed
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 procps
	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi #touched fixed

echo "did emerging iptables fail? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 iptables
	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi

#try.c: In function 'main':
#try.c:49:2: internal compiler error: Segmentation fault
#  f -= 1.;
echo "did emerging perl fail (try.c:49:2: internal compiler error: Segmentation fault) or did you emerge mpfr recently or gcc produced this error: internal compiler error: Segmentation fault for cracklib? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 mpfr
	echo "remember to --resume"
fi #touched

echo "did emerging libtool fail? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 libtool
	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi

echo "did emerging coreutils failed? (y/n)" #required in new stage3
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 coreutils
	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi

echo "did emerging psmisc failed? (y/n)"
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 sys-devel/automake:${AUTOMAKE_VERSION_SLOT}
	echo "remember to --resume"
fi

echo "did emerging gettext fail? (y/n)" #required in new stage3
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 gettext
	echo "remember to --skip-first if you are using emerge -e world or emerge -e system"
fi

#---- real stage 4

echo "did emerging libnl fail? (y/n)" #required for wpa_supplicant
read X
if [[ "${X}" == "y" ]]; then
	${CROSSDEV_TARGET}-emerge -1 libnl
	echo "you might need to --skip-first libnl if is next in the queue"
fi

echo "did emerging m2crypto fail? (y/n)" #required for wpa_supplicant
read X
if [[ "${X}" == "y" ]]; then
	grep "dev-libs/openssl -bindist" /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssl > /dev/null
	if [[ "$?" != "0" ]] ; then
		echo "added use -bindist dev-libs/openssl"
		mkdir -p /usr/${CROSSDEV_TARGET}/etc/portage/package.use/
		touch /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssl
		echo "dev-libs/openssl -bindist" >> /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssl
	fi

	grep "net-misc/openssh -bindist" /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssh > /dev/null
	if [[ "$?" != "0" ]] ; then
		echo "added use -bindist net-misc/openssh"
		mkdir -p /usr/${CROSSDEV_TARGET}/etc/portage/package.use/
		touch /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssh
		echo "net-misc/openssh -bindist" >> /usr/${CROSSDEV_TARGET}/etc/portage/package.use/openssh
	fi

	echo "only /etc/package.use changes were made."
	echo "you still need to resume emerge in native chroot"
fi

echo "did emerging llvm fail? (y/n)" #required for xorg-x11
read X
if [[ "${X}" == "y" ]]; then
	grep ">sys-devel/llvm-${LLVM_VERSION}" /usr/${CROSSDEV_TARGET}/etc/portage/package.mask/llvm > /dev/null
	if [[ "$?" != "0" ]] ; then
		echo "masking >sys-devel/llvm-${LLVM_VERSION}"
		mkdir -p /usr/${CROSSDEV_TARGET}/etc/portage/package.mask/
		touch /usr/${CROSSDEV_TARGET}/etc/portage/package.mask/llvm
		echo ">sys-devel/llvm-${LLVM_VERSION}" >> /usr/${CROSSDEV_TARGET}/etc/portage/package.mask/llvm
	fi
fi

echo "did emerging openssh complain about group sshd already exists?"
read X
if [[ "${X}" == "y" ]]; then
	groupdel sshd
	echo "remerge sshd again or resume emerge"
fi

cd "/usr/${CROSSDEV_TARGET}/etc/portage"
rm make.conf
echo "switching to native make.conf"
ln -s make.conf.native make.conf

